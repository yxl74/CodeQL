import React, { useState, useEffect } from 'react';
import { BarChart, Bar, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer, PieChart, Pie, Cell } from 'recharts';

const COLORS = ['#8884d8', '#82ca9d', '#ffc658', '#ff8042', '#0088FE', '#00C49F'];

const Card = ({ children, title }) => (
  <div style={{ backgroundColor: 'white', borderRadius: '8px', boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)', padding: '20px', marginBottom: '20px' }}>
    <h2 style={{ fontSize: '1.25rem', fontWeight: 'bold', marginBottom: '15px' }}>{title}</h2>
    {children}
  </div>
);

const AndroidSecurityDashboard = () => {
  const [data, setData] = useState(null);
  const [error, setError] = useState(null);

  useEffect(() => {
    console.log('Fetching data...');
    fetch('/dashboard_data.json')
      .then(response => {
        if (!response.ok) {
          throw new Error(`HTTP error! status: ${response.status}`);
        }
        return response.json();
      })
      .then(data => {
        console.log('Data received:', data);
        setData(data);
      })
      .catch(e => {
        console.error('Error fetching data:', e);
        setError(e.message);
      });
  }, []);

  if (error) return <div>Error: {error}</div>;
  if (!data) return <div>Loading... (If this persists, check the console for errors)</div>;

  console.log('Rendering with data:', data);

  const { summary, components } = data;

  const componentTypeData = Object.entries(summary.componentTypes).map(([name, value]) => ({ name, value }));
  const permissionLevelData = Object.entries(summary.permissionLevels).map(([name, value]) => ({ name, value }));

  // Process data for component protection status
  const componentProtectionStatus = ['activity', 'service', 'provider', 'receiver'].map(type => {
    const typeComponents = components.filter(c => c.componentType === type);
    const protectedCount = typeComponents.filter(c => c.isExported === 'false' || c.permissionNeeded !== 'None').length;
    const unprotectedCount = typeComponents.length - protectedCount;
    return {
      name: type,
      protected: protectedCount,
      unprotected: unprotectedCount
    };
  });

  return (
    <div style={{ padding: '24px', backgroundColor: '#f3f4f6', fontFamily: 'Arial, sans-serif' }}>
      <h1 style={{ fontSize: '2rem', fontWeight: 'bold', marginBottom: '24px', color: '#1f2937' }}>Android Security Dashboard</h1>
      
      <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(300px, 1fr))', gap: '20px' }}>
        <Card title="Component Types">
          <div style={{ height: '300px' }}>
            <ResponsiveContainer width="100%" height="100%">
              <PieChart>
                <Pie
                  data={componentTypeData}
                  cx="50%"
                  cy="50%"
                  labelLine={false}
                  outerRadius={80}
                  fill="#8884d8"
                  dataKey="value"
                  label={({ name, value }) => `${name}: ${value}`}
                >
                  {componentTypeData.map((entry, index) => (
                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />
                  ))}
                </Pie>
                <Tooltip />
              </PieChart>
            </ResponsiveContainer>
          </div>
        </Card>
        
        <Card title="Permission Levels">
          <div style={{ height: '300px' }}>
            <ResponsiveContainer width="100%" height="100%">
              <BarChart data={permissionLevelData}>
                <XAxis dataKey="name" />
                <YAxis />
                <Tooltip />
                <Legend />
                <Bar dataKey="value" fill="#8884d8" />
              </BarChart>
            </ResponsiveContainer>
          </div>
        </Card>

        <Card title="Component Protection Status">
          <div style={{ height: '300px' }}>
            <ResponsiveContainer width="100%" height="100%">
              <BarChart data={componentProtectionStatus}>
                <XAxis dataKey="name" />
                <YAxis />
                <Tooltip />
                <Legend />
                <Bar dataKey="protected" stackId="a" fill="#82ca9d" name="Protected" />
                <Bar dataKey="unprotected" stackId="a" fill="#ff8042" name="Unprotected" />
              </BarChart>
            </ResponsiveContainer>
          </div>
        </Card>

        <Card title="Key Metrics">
          <ul style={{ listStyle: 'none', padding: 0 }}>
            <li style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '10px' }}>
              <span style={{ fontWeight: '500' }}>Total Components:</span>
              <span style={{ fontSize: '1.5rem', fontWeight: 'bold', color: '#3b82f6' }}>
                {summary.totalComponents}
              </span>
            </li>
            <li style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '10px' }}>
              <span style={{ fontWeight: '500' }}>Exported Components:</span>
              <span style={{ fontSize: '1.5rem', fontWeight: 'bold', color: '#ef4444' }}>
                {summary.exportedComponents}
              </span>
            </li>
            <li style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>
              <span style={{ fontWeight: '500' }}>Export Percentage:</span>
              <span style={{ fontSize: '1.5rem', fontWeight: 'bold', color: '#f59e0b' }}>
                {((summary.exportedComponents / summary.totalComponents) * 100).toFixed(2)}%
              </span>
            </li>
          </ul>
        </Card>
      </div>
    </div>
  );
};

export default AndroidSecurityDashboard;
