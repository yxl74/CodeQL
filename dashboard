import React, { useState, useEffect } from 'react';
import { BarChart, Bar, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer, PieChart, Pie, Cell } from 'recharts';
import { Card, CardHeader, CardContent } from "@/components/ui/card";

const COLORS = ['#8884d8', '#82ca9d', '#ffc658', '#ff8042', '#0088FE', '#00C49F'];

const AndroidSecurityDashboard = () => {
  const [data, setData] = useState(null);
  const [error, setError] = useState(null);

  useEffect(() => {
    console.log('Fetching data...');
    fetch('/dashboard_data.json')
      .then(response => {
        if (!response.ok) {
          throw new Error(`HTTP error! status: ${response.status}`);
        }
        return response.json();
      })
      .then(data => {
        console.log('Data received:', data);
        setData(data);
      })
      .catch(e => {
        console.error('Error fetching data:', e);
        setError(e.message);
      });
  }, []);

  if (error) return <div>Error: {error}</div>;
  if (!data) return <div>Loading... (If this persists, check the console for errors)</div>;

  console.log('Rendering with data:', data);

  const { summary, components } = data;

  const componentTypeData = Object.entries(summary.componentTypes).map(([name, value]) => ({ name, value }));
  const permissionLevelData = Object.entries(summary.permissionLevels).map(([name, value]) => ({ name, value }));

  // Process data for component protection status
  const componentProtectionStatus = ['activity', 'service', 'provider', 'receiver'].map(type => {
    const typeComponents = components.filter(c => c.componentType === type);
    const protectedCount = typeComponents.filter(c => c.isExported === 'false' || c.permissionNeeded !== 'None').length;
    const unprotectedCount = typeComponents.length - protectedCount;
    return {
      name: type,
      protected: protectedCount,
      unprotected: unprotectedCount
    };
  });

  return (
    <div className="p-6 bg-gray-100">
      <h1 className="text-3xl font-bold mb-6 text-gray-800">Android Security Dashboard</h1>
      
      <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
        <Card>
          <CardHeader>
            <h2 className="text-xl font-semibold">Component Types</h2>
          </CardHeader>
          <CardContent>
            <ResponsiveContainer width="100%" height={300}>
              <PieChart>
                <Pie
                  data={componentTypeData}
                  cx="50%"
                  cy="50%"
                  labelLine={false}
                  outerRadius={80}
                  fill="#8884d8"
                  dataKey="value"
                  label={({ name, value }) => `${name}: ${value}`}
                >
                  {componentTypeData.map((entry, index) => (
                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />
                  ))}
                </Pie>
                <Tooltip />
              </PieChart>
            </ResponsiveContainer>
          </CardContent>
        </Card>
        
        <Card>
          <CardHeader>
            <h2 className="text-xl font-semibold">Permission Levels</h2>
          </CardHeader>
          <CardContent>
            <ResponsiveContainer width="100%" height={300}>
              <BarChart data={permissionLevelData}>
                <XAxis dataKey="name" />
                <YAxis />
                <Tooltip />
                <Legend />
                <Bar dataKey="value" fill="#8884d8" />
              </BarChart>
            </ResponsiveContainer>
          </CardContent>
        </Card>

        <Card>
          <CardHeader>
            <h2 className="text-xl font-semibold">Component Protection Status</h2>
          </CardHeader>
          <CardContent>
            <ResponsiveContainer width="100%" height={300}>
              <BarChart data={componentProtectionStatus}>
                <XAxis dataKey="name" />
                <YAxis />
                <Tooltip />
                <Legend />
                <Bar dataKey="protected" stackId="a" fill="#82ca9d" name="Protected" />
                <Bar dataKey="unprotected" stackId="a" fill="#ff8042" name="Unprotected" />
              </BarChart>
            </ResponsiveContainer>
          </CardContent>
        </Card>

        <Card>
          <CardHeader>
            <h2 className="text-xl font-semibold">Key Metrics</h2>
          </CardHeader>
          <CardContent>
            <ul className="space-y-4">
              <li className="flex justify-between items-center">
                <span className="font-medium">Total Components:</span>
                <span className="text-2xl font-bold text-blue-600">
                  {summary.totalComponents}
                </span>
              </li>
              <li className="flex justify-between items-center">
                <span className="font-medium">Exported Components:</span>
                <span className="text-2xl font-bold text-red-600">
                  {summary.exportedComponents}
                </span>
              </li>
              <li className="flex justify-between items-center">
                <span className="font-medium">Export Percentage:</span>
                <span className="text-2xl font-bold text-yellow-600">
                  {((summary.exportedComponents / summary.totalComponents) * 100).toFixed(2)}%
                </span>
              </li>
            </ul>
          </CardContent>
        </Card>
      </div>
    </div>
  );
};

export default AndroidSecurityDashboard;
